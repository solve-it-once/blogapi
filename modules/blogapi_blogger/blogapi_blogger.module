<?php

/**
 * @file
 * Provides Blogger services for BlogAPI
 */

/**
 * Implements hook_blogapi_info().
 */
function blogapi_blogger_blogapi_info() {
  return array(
    'api_version' => 2,
    'type' => 'xmlrpc',
    'name' => 'Blogger',
  );
}


/**
 * Implements hook_ctools_plugin_api().
 */
function blogapi_blogger_ctools_plugin_api() {
  list($module, $api) = func_get_args();
  if ($module == "services" && $api == "services") {
    return array("version" => "3");
  }
}

/**
 * Implements hook_services_resources().
 */
function blogapi_blogger_services_resources() {
  return array(
    'blogger' => array(
      'actions' => array(
        'getUsersBlogs' => array(
          'access callback' => TRUE,
          'callback' => 'blogapi_blogger_get_users_blogs',
          'enabled' => 1,
          'help' => 'Returns a list of blogs to which an author has posting privileges.',
          'args' => array(
            array(
              'appid' => 'string',
              'username' => 'string',
              'password' => 'string',
            ),
          ),
        ),
        'getUserInfo' => array(
          'access callback' => TRUE,
          'callback' => 'blogapi_blogger_get_user_info',
          'enabled' => 1,
          'help' => 'Returns information about an author in the system.',
          'args' => array(
            array(
              'appid' => 'string',
              'username' => 'string',
              'password' => 'string',
            ),
          ),
        ),
        'newPost' => array(
          'access callback' => TRUE,
          'callback' => 'blogapi_blogger_new_post',
          'enabled' => 1,
          'help' => 'Creates a new post, and optionally publishes it.',
          'args' => array(
            array(
              'appid' => 'string',
              'blogid' => 'string',
              'username' => 'string',
              'password' => 'string',
              'content' => 'string',
              'publish' => 'boolean',
            ),
          ),
        ),
        'editPost' => array(
          'access callback' => TRUE,
          'callback' => 'blogapi_blogger_edit_post',
          'enabled' => 1,
          'help' => 'Updates the information about an existing post.',
          'args' => array(
            array(
              'appid' => 'string',
              'postid' => 'string',
              'username' => 'string',
              'password' => 'string',
              'content' => 'string',
              'publish' => 'boolean',
            ),
          ),
        ),
        'getPost' => array(
          'access callback' => TRUE,
          'callback' => 'blogapi_blogger_get_post',
          'enabled' => 1,
          'help' => 'Returns information about a specific post.',
          'args' => array(
            array(
              'appid' => 'string',
              'postid' => 'string',
              'username' => 'string',
              'password' => 'string',
            ),
          ),
        ),
        'deletePost' => array(
          'access callback' => TRUE,
          'callback' => 'blogapi_blogger_delete_post',
          'enabled' => 1,
          'help' => 'Deletes a post.',
          'args' => array(
            array(
              'appid' => 'string',
              'postid' => 'string',
              'username' => 'string',
              'password' => 'string',
              'publish' => 'boolean',
            ),
          ),
        ),
      ),
    ),
  );
}

/**
 * Service callback for blogger.getUsersBlogs
 */
function blogapi_blogger_get_users_blogs($appid, $username, $password) {

}

/**
 * Service callback for blogger.getUserInfo
 */
function blogapi_blogger_get_user_info($appid, $username, $password) {

}

/**
 * Service callback for blogger.newPost
 */
function blogapi_blogger_new_post($appid, $blogid, $username, $password, $content, $publish) {

}

/**
 * Service callback for blogger.editPost
 */
function blogapi_blogger_edit_post($appid, $blogid, $username, $password, $content, $publish) {

}

/**
 * Service callback for blogger.getPost
 */
function blogapi_blogger_get_post($appid, $postid, $username, $password) {

}

/**
 * Service callback for blogger.deletePost
 */
function blogapi_blogger_delete_post($appid, $postid, $username, $password, $publish) {

}

/**
 * Extract the node title from the contents field.
 */
function blogapi_blogger_extract_title(&$contents) {
  if (preg_match('/<title>(.*?)<\/title>/i', $contents, $title)) {
    $title = strip_tags($title[0]);
    $contents = preg_replace('/<title>.*?<\/title>/i', '', $contents);
  }
  else {
    list($title, $contents) = explode("\n", $contents, 2);
  }

  return $title;
}
