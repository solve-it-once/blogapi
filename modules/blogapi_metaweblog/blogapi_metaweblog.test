<?php

/**
 * @file
 * Endpoint tests for BlogAPI Metaweblog
 */
class BlogapiMetaweblogEndpointTestCase extends DrupalWebTestCase {
  protected $profile = 'testing';
  protected $blogID = 'article';
  protected $privilegedUser;
  protected $testfile;
  protected $privilegedUser2;
  protected $xmlrpcUrl;

  /**
   * Test info.
   */
  public static function getInfo() {
    return array(
      'name' => t('Metaweblog Endpoint Tests'),
      'description' => t('Run tests for Metaweblog endpoints') ,
      'group' => t('BlogAPI'),
    );
  }

  /**
   * Set up test.
   */
  public function setUp() {
    parent::setUp(array(
      'blogapi',
      'blogapi_metaweblog',
      'filter',
      'services',
      'taxonomy',
      'xmlrpc_server',
    ));

    // Get the URL of the XML-RPC endpoint.
    $this->xmlrpcUrl = url('blogapi/xmlrpc', array('absolute' => TRUE));

    // Create a user with appropriate permissions.
    $this->privilegedUser = $this->drupalCreateUser(array('manage content with blogapi'));
    $this->privilegedUser->mail = 'test@example.com';
    $this->privilegedUser->name = 'Test user';
    user_save($this->privilegedUser);

    // Create another user with more permissions.
    $this->privilegedUser2 = $this->drupalCreateUser(array('administer nodes', 'manage content with blogapi', 'bypass node access'));
    $this->privilegedUser2->mail = 'test@example.com';
    $this->privilegedUser2->name = 'Test user2';
    user_save($this->privilegedUser2);

    $this->drupalCreateContentType(array('type' => 'article'));
  }

  /**
   * Test metaWeblog.newPost().
   */
  public function testNewPost() {
    $post_title = user_password(20);
    $post_body = user_password(20);
    $nid = $this->createPostViaxmlrpc($post_title, $post_body);


    $this->assertTrue(!empty($nid), 'Node ID was returned');

    $node = node_load($nid);

    $this->assertTrue(is_object($node), 'Node was created');

    $this->assertTrue($node->title == $post_title, 'Title is the same');

    $this->assertTrue(!empty($node->body[LANGUAGE_NONE][0]['value']) && $node->body[LANGUAGE_NONE][0]['value'] == $post_body, 'Body is the same');

    $this->assertTrue($node->status == 1, 'Node is published');
  }

  /**
   * Test metaWeblog.editPost().
   */
  public function testEditPost() {
    $post_title = user_password(20);
    $post_body = user_password(20);
    $nid = $this->createPostViaxmlrpc($post_title, $post_body);
    $old_node = node_load($nid);
    debug($old_node);

    $post_title .= ' modified title';
    $post_body .= ' modified body';

    $result = xmlrpc($this->xmlrpcUrl, array(
      'metaWeblog.editPost' => array(
        $nid,
        $this->privilegedUser2->name,
        $this->privilegedUser2->pass_raw,
        array(
          'title' => $post_title,
          'description' => $post_body,
        ),
        0
      )
    ));

    $new_node = node_load($nid, NULL, TRUE);
    debug($new_node);
    $this->assertTrue($result && $new_node->title != $old_node->title, 'Node was updated');

    $this->assertTrue($new_node->title == $post_title, 'Title was updated');

    $this->assertTrue(!empty($new_node->body[LANGUAGE_NONE][0]['value']) && $new_node->body[LANGUAGE_NONE][0]['value'] == $post_body, 'Body was updated');

    $this->assertTrue($new_node->status == 0, 'Node was unpublished');
  }

  /**
   * Test metaWeblog.getPost().
   */
  public function testGetPost() {

  }

  /**
   * Test metaWeblog.newMediaObject().
   */
  public function testNewMediaObject() {

  }

  /**
   * Test metaWeblog.getCategories().
   */
  public function testGetCategories() {

  }

  /**
   * test metaWeblog.getRecentPosts().
   */
  public function testGetRecentPosts() {

  }
}
